name: Deploy

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version of the release'
        required: true

jobs:
  deploy_to_prod:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Login to Yandex Container Registry
        run: echo ${{ secrets.YC_REGISTRY_TOKEN }} | docker login --username oauth --password-stdin cr.yandex

      - name: Check Docker image existence in Container Registry
        run: |
          if docker pull cr.yandex/crp7jeuq66rvk2nacuqp/app:${{ github.event.inputs.release_version }}_latest; then
            echo "Docker image cr.yandex/crp7jeuq66rvk2nacuqp/app:${{ github.event.inputs.release_version }}_latest found."
          else
            echo "Docker image cr.yandex/crp7jeuq66rvk2nacuqp/app:${{ github.event.inputs.release_version }}_latest not found."
            exit 1
          fi


      - name: Check if some container is running
        run: |
          CONTAINER=$(docker ps -aqf "name=shri-infra")
          if [ -n "$CONTAINER" ]; then
            docker stop $CONTAINER
            docker rm $CONTAINER
          fi  

      - name: Deploy to server
        env:
          SERVER_IP: ${{ secrets.VM_IP }}
          SERVER_USER: ${{ secrets.VM_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.VM_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/keys
          chmod 600 ~/.ssh/keys
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/keys ${{ secrets.VM_USER }}@${{ secrets.VM_IP }} << 'EOF'
            CONTAINER=$(docker ps -aqf "name=shri-infra")
            if [ -n "$CONTAINER" ]; then
              docker stop $CONTAINER
              docker rm $CONTAINER
            else
              echo "This container does not exist yet."
            fi  
            
            sudo docker pull cr.yandex/crp7jeuq66rvk2nacuqp/app:${{ github.event.inputs.release_version }}_latest
            sudo docker run -d -p 3000:3000 --name shri-infra cr.yandex/crp7jeuq66rvk2nacuqp/app:${{ github.event.inputs.release_version }}_latest
            
            sleep 10
            
            sudo docker logs shri-infra
            
            sudo docker ps
          EOF

      - name: Comment on GitHub Issue 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$(date) релиз ${{ github.event.inputs.release_version }} выкачен в прод пользователем $GITHUB_ACTOR." > comment.txt
          gh issue comment $(gh issue list --search "Релиз ${{ github.event.inputs.release_version }}" --json number --jq '.[0].number') --body-file comment.txt